{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [language, setLanguage] = useState('en');\n  const [text, setText] = useState('');\n  const [error, setError] = useState(null);\n  const onLanguageChange = lang => {\n    setLanguage(lang);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const translatedText = await getTranslationFromBackend(text, language);\n      const timestamp = new Date().toISOString();\n      const response = await saveDataToAzure({\n        timestamp,\n        originalText: text,\n        translatedText\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.message || \"Failed to save data.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n      setError(error.message);\n    }\n  };\n  const getTranslationFromBackend = async (text, targetLang) => {\n    const response = await axios.post('http://localhost:5000/translate', {\n      text,\n      targetLang\n    });\n    return response.data.translatedText;\n  };\n  const saveDataToAzure = async data => {\n    return await axios.post('http://localhost:5000/save-data', data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(RecordButton, {\n        setText: setText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        onLanguageChange: onLanguageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rRT6DuWg/SvdN/4S/+8Iel18HQg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RecordButton","Dropdown","jsxDEV","_jsxDEV","App","_s","language","setLanguage","text","setText","error","setError","onLanguageChange","lang","onSubmit","e","preventDefault","translatedText","getTranslationFromBackend","timestamp","Date","toISOString","response","saveDataToAzure","originalText","data","success","Error","message","console","targetLang","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\n\nfunction App() {\n    const [language, setLanguage] = useState('en');\n    const [text, setText] = useState('');\n    const [error, setError] = useState(null);\n\n    const onLanguageChange = (lang) => {\n        setLanguage(lang);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n\n        try {\n            const translatedText = await getTranslationFromBackend(text, language);\n            const timestamp = new Date().toISOString();\n\n            const response = await saveDataToAzure({\n                timestamp,\n                originalText: text,\n                translatedText\n            });\n\n            if (!response.data.success) {\n                throw new Error(response.data.message || \"Failed to save data.\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error.message);\n            setError(error.message);\n        }\n    };\n\n    const getTranslationFromBackend = async (text, targetLang) => {\n        const response = await axios.post('http://localhost:5000/translate', { text, targetLang });\n        return response.data.translatedText;\n    };\n\n    const saveDataToAzure = async (data) => {\n        return await axios.post('http://localhost:5000/save-data', data);\n    };\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={onSubmit}>\n                <RecordButton setText={setText} />\n                <Dropdown onLanguageChange={onLanguageChange} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            {error && <div className=\"error\">{error}</div>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}