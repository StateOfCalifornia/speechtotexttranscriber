{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport RecordingsList from './RecordingsList';\nimport Dropdown from './Dropdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null); // Added state to keep the audioBlob\n  const [audioURL, setAudioURL] = useState(null);\n  const [recordings, setRecordings] = useState([]); // State to store recordings\n\n  const fetchRecordings = async setRecordings => {\n    try {\n      const response = await axios.get('/get-blob');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recordings:\", error);\n      alert(\"Error fetching recordings. Check console for more details.\");\n    }\n  };\n  const onLanguageChange = selectedLanguage => {\n    setLanguage(selectedLanguage);\n  };\n  const onRecordingComplete = (audioBlob, audioURL) => {\n    setAudioBlob(audioBlob); // Save the audioBlob to state\n    setAudioURL(audioURL);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    // Form a FormData object to send blob data\n    const formData = new FormData();\n    formData.append('audio', audioBlob);\n    formData.append('text', text);\n    try {\n      const response = await axios.post('http://localhost:5000/save-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        alert(\"Data saved successfully!\");\n        // Fetch the updated list of recordings after successful save\n        fetchRecordings(setRecordings);\n\n        // Reset text and audioBlob for next recording\n        setText('');\n        setAudioBlob(null);\n      } else {\n        alert(\"Error while saving data!\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n      alert(\"Error while uploading. Check console for more details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Speech to Text Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Choose Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onLanguageChange: onLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n          setText: setText,\n          setHasResults: setHasResults,\n          language: language,\n          onRecordingComplete: onRecordingComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), hasResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Transcribed text in English: \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: audioURL,\n            children: \"Your browser does not support the audio element.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RecordingsList, {\n          recordings: recordings,\n          setRecordings: setRecordings,\n          fetchRecordings: fetchRecordings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A+agdGloucIrbd3Q4KVqvn1r5bY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RecordButton","RecordingsList","Dropdown","jsxDEV","_jsxDEV","App","_s","text","setText","language","setLanguage","hasResults","setHasResults","audioBlob","setAudioBlob","audioURL","setAudioURL","recordings","setRecordings","fetchRecordings","response","get","data","error","console","alert","onLanguageChange","selectedLanguage","onRecordingComplete","onSubmit","e","preventDefault","formData","FormData","append","post","headers","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport RecordingsList from './RecordingsList';\nimport Dropdown from './Dropdown';\nimport './App.css';\n\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null); // Added state to keep the audioBlob\n  const [audioURL, setAudioURL] = useState(null);\n  const [recordings, setRecordings] = useState([]); // State to store recordings\n\n\n  const fetchRecordings = async (setRecordings) => {\n    try {\n      const response = await axios.get('/get-blob');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recordings:\", error);\n      alert(\"Error fetching recordings. Check console for more details.\");\n    }\n  };\n\n  const onLanguageChange = (selectedLanguage) => {\n    setLanguage(selectedLanguage);\n  };\n\n\n\n  const onRecordingComplete = (audioBlob, audioURL) => {\n    setAudioBlob(audioBlob);  // Save the audioBlob to state\n    setAudioURL(audioURL);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // Form a FormData object to send blob data\n    const formData = new FormData();\n    formData.append('audio', audioBlob);\n    formData.append('text', text);\n\n    try {\n      const response = await axios.post('http://localhost:5000/save-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (response.data.success) {\n        alert(\"Data saved successfully!\");\n       // Fetch the updated list of recordings after successful save\n        fetchRecordings(setRecordings);\n\n        // Reset text and audioBlob for next recording\n        setText('');\n        setAudioBlob(null);\n      } else {\n        alert(\"Error while saving data!\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n      alert(\"Error while uploading. Check console for more details.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        <div className=\"title\">Speech to Text Demo</div>\n        <form onSubmit={onSubmit}>\n          <label className=\"label\">Choose Language:</label>\n          <Dropdown onLanguageChange={onLanguageChange} />\n          <RecordButton\n            setText={setText}\n            setHasResults={setHasResults}\n            language={language}\n            onRecordingComplete={onRecordingComplete}\n          />\n          {hasResults && <div>Transcribed text in English: {text}</div>}\n          {audioURL && (\n            <div>\n              <audio controls src={audioURL}>Your browser does not support the audio element.</audio>\n            </div>\n          )}\n          {audioBlob && <button className=\"button\" type=\"submit\">Save</button>}\n          <RecordingsList recordings={recordings} setRecordings={setRecordings} fetchRecordings={fetchRecordings} />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}