{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [language, setLanguage] = useState('en');\n  const [text, setText] = useState('');\n  const [error, setError] = useState(null);\n  const [hasResults, setHasResults] = useState(false);\n  const onLanguageChange = lang => {\n    setLanguage(lang);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const translatedText = await getTranslationFromBackend(text, language);\n      const timestamp = new Date().toISOString();\n      const response = await saveDataToAzure({\n        timestamp,\n        originalText: text,\n        translatedText\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.message || \"Failed to save data.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n      setError(error.message);\n    }\n  };\n  const getTranslationFromBackend = async (text, targetLang) => {\n    const response = await axios.post('http://localhost:5000/translate', {\n      text,\n      targetLang\n    });\n    return response.data.translatedText;\n  };\n  const saveDataToAzure = async data => {\n    return await axios.post('http://localhost:5000/save-data', data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Speech to Text Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Choose Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onLanguageChange: onLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n          setText: setText,\n          setHasResults: setHasResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), hasResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Transcribed text in English: \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"TOQaPGx2mJmBHyBkz59pfheW08s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RecordButton","Dropdown","jsxDEV","_jsxDEV","App","_s","language","setLanguage","text","setText","error","setError","hasResults","setHasResults","onLanguageChange","lang","onSubmit","e","preventDefault","translatedText","getTranslationFromBackend","timestamp","Date","toISOString","response","saveDataToAzure","originalText","data","success","Error","message","console","targetLang","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\nimport './App.css';\n\nfunction App() {\n    const [language, setLanguage] = useState('en');\n    const [text, setText] = useState('');\n    const [error, setError] = useState(null);\n    const [hasResults, setHasResults] = useState(false);\n\n    const onLanguageChange = (lang) => {\n        setLanguage(lang);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n\n        try {\n            const translatedText = await getTranslationFromBackend(text, language);\n            const timestamp = new Date().toISOString();\n\n            const response = await saveDataToAzure({\n                timestamp,\n                originalText: text,\n                translatedText\n            });\n\n            if (!response.data.success) {\n                throw new Error(response.data.message || \"Failed to save data.\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error.message);\n            setError(error.message);\n        }\n    };\n\n    const getTranslationFromBackend = async (text, targetLang) => {\n        const response = await axios.post('http://localhost:5000/translate', { text, targetLang });\n        return response.data.translatedText;\n    };\n\n    const saveDataToAzure = async (data) => {\n        return await axios.post('http://localhost:5000/save-data', data);\n    };\n\n    return (\n      <div className=\"App\">\n          <div className=\"card\">\n              <div className=\"title\">Speech to Text Demo</div>\n              <form onSubmit={onSubmit}>\n                  <label className=\"label\">Choose Language:</label>\n                  <Dropdown onLanguageChange={onLanguageChange} />\n                  <RecordButton setText={setText} setHasResults={setHasResults} />\n                  {hasResults && <div>Transcribed text in English: {text}</div>}\n                  <button className=\"button\" type=\"submit\">Submit</button>\n              </form>\n              {error && <div className=\"error\">{error}</div>}\n          </div>\n      </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}