{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const onLanguageChange = selectedLanguage => {\n    setLanguage(selectedLanguage);\n  };\n  const onRecordingComplete = (audioBlob, audioURL) => {\n    setAudioURL(audioURL);\n    // At this point, you also have the audioBlob which you can later send to your server for saving in Azure Blob Storage\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    // Here, you would typically send the audioBlob and text to the server to save them.\n    // For the sake of demonstration, I will just alert the user.\n    alert(\"You can now send audioBlob and text to Azure Blob Storage or SQL here or any other logic you had in mind.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Speech to Text Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Choose Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onLanguageChange: onLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n          setText: setText,\n          setHasResults: setHasResults,\n          language: language,\n          onRecordingComplete: onRecordingComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), hasResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Transcribed text in English: \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 32\n        }, this), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: audioURL,\n            children: \"Your browser does not support the audio element.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W+rcScycmuzCDT1SJfUt7/9wc1Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RecordButton","Dropdown","jsxDEV","_jsxDEV","App","_s","text","setText","language","setLanguage","hasResults","setHasResults","audioURL","setAudioURL","onLanguageChange","selectedLanguage","onRecordingComplete","audioBlob","onSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport Dropdown from './Dropdown';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n\n  const onLanguageChange = (selectedLanguage) => {\n      setLanguage(selectedLanguage);\n  };\n\n  const onRecordingComplete = (audioBlob, audioURL) => {\n      setAudioURL(audioURL);\n      // At this point, you also have the audioBlob which you can later send to your server for saving in Azure Blob Storage\n  };\n\n  const onSubmit = async (e) => {\n      e.preventDefault();\n      // Here, you would typically send the audioBlob and text to the server to save them.\n      // For the sake of demonstration, I will just alert the user.\n      alert(\"You can now send audioBlob and text to Azure Blob Storage or SQL here or any other logic you had in mind.\");\n  };\n\n  return (\n    <div className=\"App\">\n        <div className=\"card\">\n            <div className=\"title\">Speech to Text Demo</div>\n            <form onSubmit={onSubmit}>\n                <label className=\"label\">Choose Language:</label>\n                <Dropdown onLanguageChange={onLanguageChange} />\n                <RecordButton \n                  setText={setText} \n                  setHasResults={setHasResults} \n                  language={language} \n                  onRecordingComplete={onRecordingComplete} \n                />\n                {hasResults && <div>Transcribed text in English: {text}</div>}\n                {audioURL && (\n                  <div>\n                    <audio controls src={audioURL}>Your browser does not support the audio element.</audio>\n                  </div>\n                )}\n                <button className=\"button\" type=\"submit\">Save</button>\n            </form>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}