{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport RecordingsList from './RecordingsList';\nimport Dropdown from './Dropdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null); // Added state to keep the audioBlob\n  const [audioURL, setAudioURL] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const onLanguageChange = selectedLanguage => {\n    setLanguage(selectedLanguage);\n  };\n  const onRecordingComplete = (audioBlob, audioURL) => {\n    setAudioBlob(audioBlob); // Save the audioBlob to state\n    setAudioURL(audioURL);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    // Form a FormData object to send blob data\n    const formData = new FormData();\n    formData.append('audio', audioBlob);\n    formData.append('text', text);\n    try {\n      const response = await axios.post('http://localhost:5000/save-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        alert(\"Data saved successfully!\");\n        setRecordings(prev => [...prev, {\n          name: response.data.message.split(\": \")[1],\n          metadata: {\n            translation: text\n          }\n        }]);\n      } else {\n        alert(\"Error while saving data!\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n      alert(\"Error while uploading. Check console for more details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Speech to Text Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Choose Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onLanguageChange: onLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n          setText: setText,\n          setHasResults: setHasResults,\n          language: language,\n          onRecordingComplete: onRecordingComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), hasResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Transcribed text in English: \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: audioURL,\n            children: \"Your browser does not support the audio element.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecordingsList, {\n          recordings: recordings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A+agdGloucIrbd3Q4KVqvn1r5bY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RecordButton","RecordingsList","Dropdown","jsxDEV","_jsxDEV","App","_s","text","setText","language","setLanguage","hasResults","setHasResults","audioBlob","setAudioBlob","audioURL","setAudioURL","recordings","setRecordings","onLanguageChange","selectedLanguage","onRecordingComplete","onSubmit","e","preventDefault","formData","FormData","append","response","post","headers","data","success","alert","prev","name","message","split","metadata","translation","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecordButton from './RecordButton';\nimport RecordingsList from './RecordingsList';\nimport Dropdown from './Dropdown';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('en-US');\n  const [hasResults, setHasResults] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null); // Added state to keep the audioBlob\n  const [audioURL, setAudioURL] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n\n  const onLanguageChange = (selectedLanguage) => {\n    setLanguage(selectedLanguage);\n  };\n\n  const onRecordingComplete = (audioBlob, audioURL) => {\n    setAudioBlob(audioBlob);  // Save the audioBlob to state\n    setAudioURL(audioURL);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // Form a FormData object to send blob data\n    const formData = new FormData();\n    formData.append('audio', audioBlob);\n    formData.append('text', text);\n\n    try {\n      const response = await axios.post('http://localhost:5000/save-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (response.data.success) {\n        alert(\"Data saved successfully!\");\n        setRecordings(prev => [...prev, {\n          name: response.data.message.split(\": \")[1],\n          metadata: { translation: text }\n        }]);\n      } else {\n        alert(\"Error while saving data!\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n      alert(\"Error while uploading. Check console for more details.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        <div className=\"title\">Speech to Text Demo</div>\n        <form onSubmit={onSubmit}>\n          <label className=\"label\">Choose Language:</label>\n          <Dropdown onLanguageChange={onLanguageChange} />\n          <RecordButton\n            setText={setText}\n            setHasResults={setHasResults}\n            language={language}\n            onRecordingComplete={onRecordingComplete}\n          />\n          {hasResults && <div>Transcribed text in English: {text}</div>}\n          {audioURL && (\n            <div>\n              <audio controls src={audioURL}>Your browser does not support the audio element.</audio>\n            </div>\n          )}\n          <button className=\"button\" type=\"submit\">Save</button>\n          <RecordingsList recordings={recordings}/>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}