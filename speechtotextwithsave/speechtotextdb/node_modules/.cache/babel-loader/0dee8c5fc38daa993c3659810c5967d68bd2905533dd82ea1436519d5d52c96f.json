{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\RecordingsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecordingsList() {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-blobs');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recordings:\", error);\n    }\n  };\n  const deleteBlob = async blobName => {\n    try {\n      await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\n      // Refresh the list after deleting\n      fetchRecordings();\n    } catch (error) {\n      console.error(\"Error deleting blob:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recordings-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), recordings.map(blob => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: blob.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Translated text: \", blob.metadata.translation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteBlob(blob.name),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, blob.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(RecordingsList, \"qzxKi6hFqLIDRWsurndfTK/r47c=\");\n_c = RecordingsList;\nexport default RecordingsList;\nvar _c;\n$RefreshReg$(_c, \"RecordingsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecordingsList","_s","recordings","setRecordings","fetchRecordings","response","get","data","error","console","deleteBlob","blobName","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blob","name","metadata","translation","onClick","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/RecordingsList.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RecordingsList() {\r\n  const [recordings, setRecordings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRecordings();\r\n  }, []);\r\n\r\n  const fetchRecordings = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/get-blobs');\r\n      setRecordings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching recordings:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteBlob = async (blobName) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\r\n      // Refresh the list after deleting\r\n      fetchRecordings();\r\n    } catch (error) {\r\n      console.error(\"Error deleting blob:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"recordings-list\">\r\n      <h2>Recordings</h2>\r\n      {recordings.map(blob => (\r\n        <div key={blob.name} className=\"recording-item\">\r\n          <span>{blob.name}</span> - \r\n          <span>Translated text: {blob.metadata.translation}</span>\r\n          <button onClick={() => deleteBlob(blob.name)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecordingsList;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdQ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;MACnEH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACF,MAAMd,KAAK,CAACe,MAAM,CAAE,qCAAoCD,QAAS,EAAC,CAAC;MACnE;MACAP,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBhB,UAAU,CAACiB,GAAG,CAACC,IAAI,iBAClBrB,OAAA;MAAqBc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Cf,OAAA;QAAAe,QAAA,EAAOM,IAAI,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,MACxB,eAAAnB,OAAA;QAAAe,QAAA,GAAM,mBAAiB,EAACM,IAAI,CAACE,QAAQ,CAACC,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDnB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACU,IAAI,CAACC,IAAI,CAAE;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHrDE,IAAI,CAACC,IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAtCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}