{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\RecordingsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecordingsList() {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-blobs');\n      setRecordings(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recordings:\", error);\n    }\n  };\n  const deleteBlob = async blobName => {\n    try {\n      await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\n      // Refresh the list after deleting\n      fetchRecordings();\n    } catch (error) {\n      console.error(\"Error deleting blob:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recordings-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recordings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), recordings.map(record => {\n      var _record$metadata;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Recording Name: \", record.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Translation: \", (_record$metadata = record.metadata) === null || _record$metadata === void 0 ? void 0 : _record$metadata.translation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: record.audioContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), \" \"]\n      }, record.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(RecordingsList, \"qzxKi6hFqLIDRWsurndfTK/r47c=\");\n_c = RecordingsList;\nexport default RecordingsList;\nvar _c;\n$RefreshReg$(_c, \"RecordingsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecordingsList","_s","recordings","setRecordings","fetchRecordings","response","get","data","console","log","error","deleteBlob","blobName","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","_record$metadata","name","metadata","translation","controls","src","audioContent","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/RecordingsList.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RecordingsList() {\r\n    const [recordings, setRecordings] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRecordings();\r\n    }, []);\r\n\r\n    const fetchRecordings = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/get-blobs');\r\n            setRecordings(response.data);\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching recordings:\", error);\r\n        }\r\n    };\r\n\r\n    const deleteBlob = async (blobName) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\r\n            // Refresh the list after deleting\r\n            fetchRecordings();\r\n        } catch (error) {\r\n            console.error(\"Error deleting blob:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"recordings-list\">\r\n            <h2>Recordings:</h2>\r\n            {recordings.map(record => (\r\n                <div key={record.name}>\r\n                    <div>Recording Name: {record.name}</div>\r\n                    <div>Translation: {record.metadata?.translation}</div>\r\n                    <audio controls src={record.audioContent}></audio> {/* Use the Base64 encoded audio data */}\r\n                    {/* Add a delete button here if needed */}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecordingsList;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZQ,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;MACnEH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACA,MAAMf,KAAK,CAACgB,MAAM,CAAE,qCAAoCD,QAAS,EAAC,CAAC;MACnE;MACAR,eAAe,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBjB,UAAU,CAACkB,GAAG,CAACC,MAAM;MAAA,IAAAC,gBAAA;MAAA,oBAClBvB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,GAAK,kBAAgB,EAACM,MAAM,CAACE,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxCpB,OAAA;UAAAgB,QAAA,GAAK,eAAa,GAAAO,gBAAA,GAACD,MAAM,CAACG,QAAQ,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBG,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtDpB,OAAA;UAAO2B,QAAQ;UAACC,GAAG,EAAEN,MAAM,CAACO;QAAa;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA,GAH7CE,MAAM,CAACE,IAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhB,CAAC;IAAA,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAClB,EAAA,CAxCQD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}