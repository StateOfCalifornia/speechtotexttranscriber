{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\speechtotextdb\\\\speechtotextdb\\\\src\\\\RecordingsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecordingsList() {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-blobs');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recordings:\", error);\n    }\n  };\n  const deleteBlob = async blobName => {\n    try {\n      await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\n      // Refresh the list after deleting\n      fetchRecordings();\n    } catch (error) {\n      console.error(\"Error deleting blob:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recordings-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), recordings.map((record, index) => {\n      var _record$metadata;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: record.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Translation: \", ((_record$metadata = record.metadata) === null || _record$metadata === void 0 ? void 0 : _record$metadata.translation) || 'No translation available']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteBlob(record.name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(RecordingsList, \"qzxKi6hFqLIDRWsurndfTK/r47c=\");\n_c = RecordingsList;\nexport default RecordingsList;\nvar _c;\n$RefreshReg$(_c, \"RecordingsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecordingsList","_s","recordings","setRecordings","fetchRecordings","response","get","data","error","console","deleteBlob","blobName","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","index","_record$metadata","name","metadata","translation","onClick","_c","$RefreshReg$"],"sources":["C:/repos/speechtotextdb/speechtotextdb/src/RecordingsList.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RecordingsList() {\r\n    const [recordings, setRecordings] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRecordings();\r\n    }, []);\r\n\r\n    const fetchRecordings = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/get-blobs');\r\n            setRecordings(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching recordings:\", error);\r\n        }\r\n    };\r\n\r\n    const deleteBlob = async (blobName) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/delete-blob/${blobName}`);\r\n            // Refresh the list after deleting\r\n            fetchRecordings();\r\n        } catch (error) {\r\n            console.error(\"Error deleting blob:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"recordings-list\">\r\n            <h2>Recordings</h2>\r\n            {recordings.map((record, index) => (\r\n                <div key={index}>\r\n                    <p>{record.name}</p>\r\n                    <p>Translation: {record.metadata?.translation || 'No translation available'}</p>\r\n                    <button onClick={() => deleteBlob(record.name)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecordingsList;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZQ,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;MACnEH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACA,MAAMd,KAAK,CAACe,MAAM,CAAE,qCAAoCD,QAAS,EAAC,CAAC;MACnE;MACAP,eAAe,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5Bf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBhB,UAAU,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK;MAAA,IAAAC,gBAAA;MAAA,oBAC1BvB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAAIM,MAAM,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBnB,OAAA;UAAAe,QAAA,GAAG,eAAa,EAAC,EAAAQ,gBAAA,GAAAF,MAAM,CAACI,QAAQ,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBG,WAAW,KAAI,0BAA0B;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChFnB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACU,MAAM,CAACG,IAAI,CAAE;UAAAT,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHzDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CAAC;IAAA,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjB,EAAA,CAtCQD,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}